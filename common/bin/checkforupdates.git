#!/bin/bash

# Copyright 2011 Boris Kogan (boris@thekogans.net)
#
# This file is part of thekogans_toolchain.
#
# thekogans_toolchain is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# thekogans_toolchain is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with thekogans_toolchain. If not, see <http://www.gnu.org/licenses/>.

# This script checks the local toolchain and build system versions
# against the current ones and updates them if less then.

# Create the environment.
if [ "$TOOLCHAIN_ROOT" == "" ]; then
    TOOLCHAIN_COMMON_BIN="$(cd $(dirname ${BASH_SOURCE[0]}) && pwd)"
    if [ ! -e "$TOOLCHAIN_COMMON_BIN"/setenvironment ]; then
        echo "$TOOLCHAIN_COMMON_BIN/setenvironment not found."
        exit 1
    fi
    . "$TOOLCHAIN_COMMON_BIN"/setenvironment "$@"
fi

git_schema="$TOOLCHAIN_GIT_SCHEMA"
git_host="$TOOLCHAIN_GIT_HOST"
git_user="$TOOLCHAIN_GIT_USER"
git_raw_url="$TOOLCHAIN_GIT_RAW_URL"
branch=master
install=yes

# Parse the command line.
for i in "$@"; do
    case $i in
        -gs:*|--git-schema:*)
            git_schema="${i#*:}"
            ;;
        -gh:*|--git-host:*)
            git_host="${i#*:}"
            ;;
        -gu:*|--git-user:*)
            git_user="${i#*:}"
            ;;
        --git-raw-url:*)
            git_raw_url="${i#*:}"
            ;;
        -b:*|--branch:*)
            branch="${i#*:}"
            ;;
        -i:*|--install:*)
            install="${i#*:}"
            ;;
    esac
done

if [ "$git_raw_url" == "" ]; then
    if [ "$git_schema" == "" ] || [ "$git_host" == "" ] || [ "$git_user" == "" ]; then
        echo "usage: $0 \
$environment_options \
[[-gs | --git-schema]:[https | git | ssh | ...]] \
[[-gh | --git-host]:[github.com | ...]] \
[[-gu | --git-user]:user] or"
        echo "       $0 \
$environment_options \
[[--git-raw-url]:url]"
        exit 1
    fi
    git_raw_url="$git_schema"://raw."$git_host"/"$git_user"
fi

# Check the build system first.
CURRENT_BUILD_SYSTEM_VERSION="$(get_build_system_version)"
echo "Current build system version: $CURRENT_BUILD_SYSTEM_VERSION"

from="$git_raw_url"/build_system/"$branch"/version
to="$TOOLCHAIN_ROOT"/drops/latest_build_system_version
"$(get_toolchain_program -o:thekogans -p:curl)" -L -# -k "$from" -o "$to"
check_errors $?

AVAILABLE_BUILD_SYSTEM_VERSION="0.0.0"
if [ -e "$to" ]; then
    chmod +x "$to"
    check_errors $?
    . "$to"
    AVAILABLE_BUILD_SYSTEM_VERSION="$(get_build_system_version)"
    rm "$to"
    check_errors $?
fi
echo "Available build system version: $AVAILABLE_BUILD_SYSTEM_VERSION"

# If the build system is up to date, check the toolchain.
CURRENT_TOOLCHAIN_VERSION="$(get_toolchain_version)"
echo "Current toolchain version: $CURRENT_TOOLCHAIN_VERSION"

from="$git_raw_url"/toolchain/"$branch"/common/bin/version
to="$TOOLCHAIN_ROOT"/drops/latest_toolchain_version
"$(get_toolchain_program -o:thekogans -p:curl)" -L -# -k "$from" -o "$to"
check_errors $?

AVAILABLE_TOOLCHAIN_VERSION="0.0.0"
if [ -e "$to" ]; then
    chmod +x "$to"
    check_errors $?
    . "$to"
    AVAILABLE_TOOLCHAIN_VERSION="$(get_toolchain_version)"
    rm "$to"
    check_errors $?
fi
echo "Available toolchain version: $AVAILABLE_TOOLCHAIN_VERSION"

if [ "$install" == "yes" ]; then
    if [ "$(is_version_less_then -v1:$CURRENT_BUILD_SYSTEM_VERSION -v2:$AVAILABLE_BUILD_SYSTEM_VERSION)" == "yes" ]; then
        "$TOOLCHAIN_ROOT"/common/bin/makebuildsystemdrop.git
        check_errors $?
        if [ -d "$TOOLCHAIN_ROOT"/drops/toolchain ]; then
            rm -rf "$TOOLCHAIN_ROOT"/drops/toolchain
            check_errors $?
        fi
        TARBALL_NAME=thekogans_"$TOOLCHAIN_NAME"-"$TOOLCHAIN_TRIPLET"-"$AVAILABLE_TOOLCHAIN_VERSION"-"$AVAILABLE_BUILD_SYSTEM_VERSION".tar.gz
        tar zxvf "$TOOLCHAIN_ROOT"/drops/"$TARBALL_NAME" -C "$TOOLCHAIN_ROOT"/drops
        check_errors $?
        "$TOOLCHAIN_ROOT"/drops/toolchain/install
        check_errors $?
        rm -rf "$TOOLCHAIN_ROOT"/drops/toolchain
        check_errors $?
    elif [ "$(is_version_less_then -v1:$CURRENT_TOOLCHAIN_VERSION -v2:$AVAILABLE_TOOLCHAIN_VERSION)" == "yes" ]; then
        "$TOOLCHAIN_ROOT"/common/bin/maketoolchaindrop.git
        check_errors $?
        if [ -d "$TOOLCHAIN_ROOT"/drops/toolchain ]; then
            rm -rf "$TOOLCHAIN_ROOT"/drops/toolchain
            check_errors $?
        fi
        TARBALL_NAME=thekogans_"$TOOLCHAIN_NAME"-"$TOOLCHAIN_TRIPLET"-"$AVAILABLE_TOOLCHAIN_VERSION".tar.gz
        tar zxvf "$TOOLCHAIN_ROOT"/drops/"$TARBALL_NAME" -C "$TOOLCHAIN_ROOT"/drops
        check_errors $?
        "$TOOLCHAIN_ROOT"/drops/toolchain/install
        check_errors $?
        rm -rf "$TOOLCHAIN_ROOT"/drops/toolchain
        check_errors $?
    fi
fi

exit 0
